{"version":3,"sources":["images/231471.jpg","images/231472.jpg","images/231473.jpg","images/231474.jpg","images/231480.jpg","images/231483.jpg","images/231484.jpg","images/231492.jpg","images/231504.jpg","images/231505.jpg","images/231506.jpg","images/231507.jpg","images/231508.jpg","images/231509.jpg","images/231510.jpg","images/45.svg","state-management/initialState.js","state-management/images.js","state-management/reducers/index.js","state-management/store/index.js","state-management/service/index.js","state-management/actions/index.js","helpers/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","currentJoke","picture","categories","menu","currentCategory","images","chuck0","chuck1","chuck2","chuck3","chuck4","chuck5","chuck6","chuck7","chuck8","chuck9","chuck10","chuck11","chuck12","chuck13","chuck14","reducer","state","arguments","length","undefined","action","type","pictureIndex","Math","floor","random","Object","objectSpread","value","store","createStore","applyMiddleware","thunk","JokeService","category","_this","this","classCallCheck","getJoke","asyncToGenerator","regenerator_default","a","mark","_callee","joke","wrap","_context","prev","next","fetch","concat","sent","abrupt","json","stop","getCategories","_callee2","_context2","fetchAllActionCreator","fetchJoke","jokeService","dispatch","then","res","UrlParamsMaker","addParam","newParams","model","view","key","keys","params","filter","index","trim","push","defineProperty","i","splice","urlParams","newUrl","window","location","protocol","host","pathname","history","pushState","getParams","search","App","urlParamsMaker","jokeWithCategory","toggleMenu","setState","handleClick","getState","_this2","fetchAll","subscribe","forceUpdate","console","log","document","getElementById","innerHTML","classList","add","setTimeout","remove","txt","setInterval","charAt","_this3","menuItems","jokesBlockClasses","navBarWrapperClasses","navBarClasses","navBarPoints","map","item","react_default","createElement","onClick","className","tabIndex","id","src","alt","preloader","React","Component","Boolean","hostname","match","ReactDOM","render","react_redux_es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3f2b23a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/231471.c014f241.jpg\";","module.exports = __webpack_public_path__ + \"static/media/231472.5d92a714.jpg\";","module.exports = __webpack_public_path__ + \"static/media/231473.8361001c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/231474.c3caa788.jpg\";","module.exports = __webpack_public_path__ + \"static/media/231480.d9956a16.jpg\";","module.exports = __webpack_public_path__ + \"static/media/231483.42b745a9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/231484.3ab4c710.jpg\";","module.exports = __webpack_public_path__ + \"static/media/231492.b358fe68.jpg\";","module.exports = __webpack_public_path__ + \"static/media/231504.228bb61a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/231505.ee298e53.jpg\";","module.exports = __webpack_public_path__ + \"static/media/231506.e88dd41f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/231507.fd1b9bac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/231508.209cb8e5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/231509.659e6b91.jpg\";","module.exports = __webpack_public_path__ + \"static/media/231510.525a0635.jpg\";","module.exports = __webpack_public_path__ + \"static/media/45.f167cd57.svg\";","const initialState = {\n  currentJoke: '',\n  picture: '',\n  categories: [],\n  menu: false,\n  currentCategory: 'all'\n}\n\nexport default initialState","import chuck0 from '../images/231471.jpg'\nimport chuck1 from '../images/231472.jpg'\nimport chuck2 from '../images/231473.jpg'\nimport chuck3 from '../images/231474.jpg'\nimport chuck4 from '../images/231480.jpg'\nimport chuck5 from '../images/231483.jpg'\nimport chuck6 from '../images/231484.jpg'\nimport chuck7 from '../images/231492.jpg'\nimport chuck8 from '../images/231504.jpg'\nimport chuck9 from '../images/231505.jpg'\nimport chuck10 from '../images/231506.jpg'\nimport chuck11 from '../images/231507.jpg'\nimport chuck12 from '../images/231508.jpg'\nimport chuck13 from '../images/231509.jpg'\nimport chuck14 from '../images/231510.jpg'\nlet images = [\n  chuck0,\n  chuck1,\n  chuck2,\n  chuck3,\n  chuck4,\n  chuck5,\n  chuck6,\n  chuck7,\n  chuck8,\n  chuck9,\n  chuck10,\n  chuck11,\n  chuck12,\n  chuck13,\n  chuck14,\n]\n\nexport default images","import initialState from '../initialState'\nimport images from '../images'\nfunction reducer (state = initialState, action) {\n  switch (action.type) {\n    case \"FETCHALL\": {\n      let pictureIndex = Math.floor(Math.random()*10)\n      return {\n        ...state,\n        currentJoke: action.value[0],\n        categories: action.value[1],\n        picture: images[pictureIndex],\n        currentCategory: action.value[2]\n      }\n    }\n    case \"TOGGLEMENU\": {\n      return {\n        ...state,\n        menu: action.value\n      }\n    }\n    default: return state\n  }\n}\n\nexport default reducer","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\nimport reducer from '../reducers'\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nexport default store","export default class JokeService {\n  constructor(category) {\n    this.category = category ? `?category=${category}` : ''\n  }\n  getJoke = async () => {\n    const joke = await fetch(`https://api.chucknorris.io/jokes/random${this.category}`);\n    return joke.json()\n  }\n  getCategories = async () => {\n    const categories = await fetch('https://api.chucknorris.io/jokes/categories');\n    return categories.json()\n  }\n}","import JokeService from '../service'\nimport initialState from '../initialState'\n\nfunction fetchAllActionCreator (value) {\n  return {\n    type: 'FETCHALL',\n    value\n  }\n}\n\nfunction fetchAll(category) {\n  const jokeService = new JokeService(category)\n  return (dispatch) => {\n    jokeService\n    .getJoke()\n    .then(res => {\n      initialState.currentJoke = res.value\n    })\n    .then(() => {\n      jokeService\n      .getCategories()\n      .then(res => {\n       initialState.categories = res\n       dispatch(fetchAllActionCreator([initialState.currentJoke, initialState.categories]))\n      })\n    })\n  }\n}\n\nfunction toggleMenu (value) {\n  return {\n    type: 'TOGGLEMENU',\n    value\n  }\n}\n\nfunction fetchJoke(category) {\n  const jokeService = new JokeService(category)\n  return (dispatch) => {\n    jokeService\n    .getJoke()\n    .then(res => {\n      initialState.currentJoke = res.value\n      initialState.currentCategory = res.categories[0]\n      dispatch(fetchAllActionCreator([initialState.currentJoke, initialState.categories, res.categories[0]]))\n    })\n  }\n}\n\nexport {fetchAll, fetchJoke, toggleMenu}","class UrlParamsMaker {\n  constructor() {\n    this.urlParams = ''\n    this.params = []\n    this.getParams = ''\n  }\n  addParam = (newParams = {}) => {\n\n    this.model(newParams)\n    this.view()\n\n  }\n  model = (newParams) => {\n    // newParams[key].trim()\n    let isExist = false\n    let key = Object.keys(newParams)[0]\n    let value = newParams[key]\n    isExist = this.params.filter((value, index) => {\n      return Object.keys(value)[0] === Object.keys(newParams)[0]\n    })\n    if(!isExist.length && newParams[key] && newParams[key].trim()) {\n      for(let key in newParams) {\n        this.params.push({\n          [key]: newParams[key].trim()\n        })\n      }\n    } else {\n        let index = ''\n        for(let i = 0; i < this.params.length; i++) {\n          if(Object.keys(this.params[i])[0] === Object.keys(newParams)[0]) {\n            index = i\n          }\n        }\n        if(!newParams[key].length) {\n          this.params.splice(index, 1)\n        } else {\n          this.params.splice(index, 1, {[key]: value.trim()})\n        }\n    }\n  }\n  view = () => {\n    this.urlParams = ''\n    for(let i = 0; i < this.params.length; i++) {\n      for(let key in this.params[i]) {\n        this.urlParams += i === 0\n          ? `?${key}=${this.params[i][key]}`\n          : `&${key}=${this.params[i][key]}`\n      }\n    }\n    const baseUrl = window.location.protocol + '//' + window.location.host + window.location.pathname\n    const newUrl = baseUrl + this.urlParams\n    window.history.pushState(null, null, newUrl);\n    this.getParams = window.location.search\n  }\n}\n\n\nexport default UrlParamsMaker","import React from 'react';\nimport store from './state-management/store'\nimport './styles/index.scss';\nimport {fetchAll, fetchJoke, toggleMenu} from './state-management/actions'\nimport preloader from './images/45.svg'\nimport urlParamsMaker from './helpers'\nclass App extends React.Component {\n  state = {\n    category: false,\n  }\n  componentDidMount () {\n    store.dispatch(fetchAll())\n    store.subscribe(() => this.forceUpdate());\n  }\n  urlParamsMaker = new urlParamsMaker ();\n  componentWillReceiveProps() {\n    console.log('wow')\n  }\n  componentDidUpdate() {\n      let joke = document.getElementById('joke');\n      joke.innerHTML = '';\n      document.getElementById('jokes-block').classList.add('slip')\n      setTimeout(() => {\n        document.getElementById('jokes-block').classList.remove('slip')\n      }, 400)\n      let i = 0;\n      let txt = store.getState().currentJoke;\n      const speed = 5;\n      function typeWriter() {\n        if (i < txt.length) {\n          joke.innerHTML += txt.charAt(i);\n          i++;\n        }\n      }\n      setInterval(typeWriter, speed);\n    }\n\n  jokeWithCategory = (category) => {\n    this.toggleMenu()\n    this.urlParamsMaker.addParam({\n      category: category\n    })\n    this.setState({\n      category: category\n    }, () => store.dispatch(fetchJoke(this.state.category)))\n  }\n  handleClick = () => {\n\n    store.dispatch(fetchJoke(this.state.category))\n  }\n  toggleMenu = () => {\n    store.dispatch(toggleMenu(!store.getState().menu))\n  }\n  render () {\n    if(store.getState().picture.length) {\n      let menuItems = 'menu__item--hamburger'\n      let jokesBlockClasses = 'jokes-block'\n      let navBarWrapperClasses = 'nav-bar-wrapper'\n      let navBarClasses = 'nav-bar'\n      let navBarPoints = store.getState().categories.map((item, index) =>\n      <li key={index} onClick={() => this.jokeWithCategory(`${item}`)}>{item}</li>\n      )\n      if(store.getState().menu) {\n        menuItems = 'menu__item--hamburger menu-item-open'\n        jokesBlockClasses = 'jokes-block mini-scaled'\n        navBarClasses = 'nav-bar nav-bar-open'\n        navBarWrapperClasses = 'nav-bar-wrapper nav-bar-wrapper-open'\n      }\n    return (\n      <div className=\"App\">\n      <div className={navBarWrapperClasses}>\n        <div className={navBarClasses}>\n          <ul className=\"list\">\n          <li className=\"current-category\">\n            <p>Current category:</p>\n            <p className=\"category-name\">{store.getState().currentCategory ? store.getState().currentCategory : 'all'}</p>\n          </li>\n          <li>All</li>\n            {navBarPoints}\n          </ul>\n        </div>\n      </div>\n\n        <div className=\"menu__wrapper\" onClick={this.toggleMenu}>\n          <div className={menuItems} tabIndex=\"1\">\n            <div className=\"line\"></div>\n            <div className=\"line\"></div>\n            <div className=\"line\"></div>\n          </div>\n        </div>\n        {/* <Rotate> */}\n        <div className={jokesBlockClasses} id=\"jokes-block\">\n          <p className=\"joke\" id=\"joke\"></p>\n          <img src = {store.getState().picture} alt=\"\" onClick= {this.handleClick}></img>\n        </div>\n        {/* </Rotate> */}\n      </div>\n    );\n    } else return (\n      <div className=\"App\">\n        <div className=\"preloader-block\">\n          <p>Wait</p>\n          <div className=\"preloader\">\n          <img src={preloader} alt=\"preloader\"></img>\n          </div>\n        </div>\n      </div>\n      )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './state-management/store'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}